package com.kmmoon.common.config;import io.swagger.v3.oas.models.Components;import io.swagger.v3.oas.models.OpenAPI;import io.swagger.v3.oas.models.info.Contact;import io.swagger.v3.oas.models.info.Info;import io.swagger.v3.oas.models.info.License;import io.swagger.v3.oas.models.security.SecurityRequirement;import io.swagger.v3.oas.models.security.SecurityScheme;import io.swagger.v3.oas.models.servers.Server;import org.springframework.beans.factory.annotation.Value;import org.springframework.context.annotation.Bean;import org.springframework.context.annotation.Configuration;import java.util.Arrays;@Configurationpublic class SwaggerConfig {    @Value("${spring.profiles.active}")    private String profile;    @Value("${spring.application.name}")    private String appName;    @Value("${server.port}")    private String port;    @Bean    public OpenAPI openAPI(@Value("#{systemProperties['git.tag.version']}") String version) {        String url = (profile.equals("local"))? "http://localhost:"+ port +"/" + appName : "https://dev.test.com/" + appName;        Info info = new Info().title(appName).version(version)                .description("앱 개발시 사용되는 서버 API에 대한 연동 문서입니다.")                .termsOfService("http://swagger.io/terms/")                .contact(new Contact().name("kmmoon").url("https://github.com/kyuminMoon").email("nemesis1825@gmail.com"))                .license(new License().name("kmmoon").url("https://github.com/kyuminMoon"));        SecurityScheme securityScheme = new SecurityScheme()                .type(SecurityScheme.Type.HTTP).scheme("bearer").bearerFormat("JWT")                .in(SecurityScheme.In.HEADER).name("Authorization");        SecurityRequirement schemaRequirement = new SecurityRequirement().addList("bearerAuth");        return new OpenAPI()                .components(new Components().addSecuritySchemes("bearerAuth", securityScheme))                .security(Arrays.asList(schemaRequirement))                .addServersItem(new Server().url(url))                .info(info);    }}